plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '2.7.8'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id "org.jsonschema2pojo" version "1.1.3" // 테스트용 (나중에 삭제하기)
}

group = 'com.green.nowon'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

war {
  enabled = true
  archiveName("CodeBox.war")
}
bootWar { 
  enabled = false 
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://jitpack.io' }
}

dependencies {
	implementation files('libs/kobis-opcl-rest-v1.0.jar')
	implementation 'com.github.shin285:KOMORAN:3.3.4'

//테스트용(나중에 삭제하기)==========================================================
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-batch'
//=================================================================================

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//테스트용(나중에 삭제하기)==========================================================
		implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
//=================================================================================

	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'

//테스트용(나중에 삭제하기)==========================================================
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.data:spring-data-rest-hal-explorer'
//=================================================================================

	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

//테스트용(나중에 삭제하기)==========================================================
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.batch:spring-batch-test'
//=================================================================================
	
	testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

// tasks.withType(JavaCompile) { 
// 	// inputs.files(tasks.named('processResources'))
// 	options.compilerArgs = [ 
// 			// '-Amapstruct.defaultComponentModel=spring'
// 			'-Dfile.encoding=UTF-8'
// 			// ,"-Xms1G"
// 			// ,"-Xmx3G"
// 		] 
// }